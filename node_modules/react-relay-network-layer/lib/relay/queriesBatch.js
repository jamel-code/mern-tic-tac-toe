'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = queriesBatch;

var _query = require('./_query');

function queriesBatch(relayRequestList, fetchWithMiddleware) {
  var requestMap = {};
  relayRequestList.forEach(function (req) {
    var reqId = req.getID();
    requestMap[reqId] = req;
  });

  var req = {
    relayReqId: 'BATCH_QUERY:' + Object.keys(requestMap).join(':'),
    relayReqObj: relayRequestList,
    relayReqType: 'batch-query',
    method: 'POST',
    headers: {
      Accept: '*/*',
      'Content-Type': 'application/json'
    }
  };

  req.body = JSON.stringify(Object.keys(requestMap).map(function (id) {
    return {
      id: id,
      query: requestMap[id].getQueryString(),
      variables: requestMap[id].getVariables()
    };
  }));

  return fetchWithMiddleware(req).then(function (batchResponses) {
    batchResponses.forEach(function (res) {
      if (!res) return;
      var relayRequest = requestMap[res.id];

      if (relayRequest) {
        (0, _query.queryPost)(relayRequest, new Promise(function (resolve) {
          if (res.payload) {
            resolve(res.payload);
            return;
          }
          // compatibility with graphene-django and apollo-server batch format
          resolve(res);
        }));
      }
    });
  }).catch(function (e) {
    return Promise.all(relayRequestList.map(function (relayRequest) {
      return relayRequest.reject(e);
    }));
  });
}